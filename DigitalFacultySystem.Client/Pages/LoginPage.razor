@page "/login"
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavManager
@using DigitalFacultySystem.Client.Authentication
@using DigitalFacultySystem.DataService.Repositories.Interfaces
@using DigitalFacultySystem.Entities.Dtos.SecurityDtos
@inject IUserAccount AccountService
@inject IJSRuntime js

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg">
                <!-- Added shadow-lg for nice shadow effect -->
                <div class="card-header text-center bg-primary text-white">
                    <h3>Login to Your Account</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="User" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="email" class="form-label">Email Address</label>
                            <input @bind="User.Email" id="email" class="form-control" type="email" placeholder="Enter your email" required />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <div class="input-group">
                                <input @bind="User.Password" id="password" class="form-control" type="@passwordInputType" placeholder="Enter your password" required />
                                <button class="btn btn-outline-secondary" type="button" @onclick="TogglePasswordVisibility">
                                    @passwordButtonText
                                </button>
                            </div>
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-primary">Login</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public LoginDto User { get; set; } = new();

    private bool isPasswordVisible = false;
    private string passwordInputType => isPasswordVisible ? "text" : "password";
    private string passwordButtonText => isPasswordVisible ? "Hide" : "Show";

    async Task HandleLogin()
    {
        var (flag, token, message) = await AccountService.LoginAccount(User);
        if (flag)
        {
            string customMessage = $"{message}{Environment.NewLine}{token}";
            await js.InvokeVoidAsync("alert", customMessage);
            User = new();

            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(token);
            NavManager.NavigateTo("/", forceLoad: true);
        }

        await js.InvokeVoidAsync("alert", message);
    }

    void TogglePasswordVisibility()
    {
        isPasswordVisible = !isPasswordVisible;
    }
}
